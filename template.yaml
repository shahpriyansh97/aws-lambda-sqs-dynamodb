AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  UserDataDLQName:
    Type: String
    Default: 'user-data-dlq'
  UserDataQueueName:
    Type: String
    Default: 'user-data-queue'
  UserDataTableName:
    Type: String
    Default: 'UserDataTable'
  UserDataGenerationImageURI:
    Type: String

Resources:
  UserDataDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-${UserDataDLQName}'

  UserDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${AWS::StackName}-${UserDataQueueName}'
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UserDataDLQ.Arn
        maxReceiveCount: 3

  UserDataDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-${UserDataTableName}'
      AttributeDefinitions:
        - AttributeName: 'messageId'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'messageId'
          KeyType: 'HASH' ## Partition Key
      BillingMode: PAY_PER_REQUEST

  DataCreationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/UserDataCreationLambdaFunction'
      RetentionInDays: 30

  DataConsumerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/UserDataConsumerLambdaFunction'
      RetentionInDays: 30

  UserDataCreationIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
         - Effect: Allow
           Principal:
            Service:
              - lambda.amazonaws.com
           Action:
            - 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:SendMessage'
                  - 'sqs:GetQueueUrl'
                Resource: !GetAtt UserDataQueue.Arn
        - PolicyName: LambdaBasicLoggingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogGroup'
                  - 'logs:PutLogEvents'
                Resource: !GetAtt DataCreationLogGroup.Arn

  UserDataConsumerIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:ReceiveMessage'
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:DeleteMessage'
                Resource: !GetAtt UserDataQueue.Arn
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:Query'
                  - 'dynamodb:Scan'
                  - 'dynamodb: UpdateItem'
                Resource: !GetAtt UserDataDynamoDBTable.Arn
        - PolicyName: LambdaBasicLoggingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogGroup'
                  - 'logs:PutLogEvents'
                Resource: !GetAtt DataConsumerLogGroup.Arn

  UserDataGenerationLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Role: !GetAtt UserDataCreationIAMRole.Arn
      Timeout: 20
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref UserDataQueue
    Metadata:
      DockerTag: nodejs20.x-v1
      DockerContext: ./UserDataGenerator
      Dockerfile: Dockerfile